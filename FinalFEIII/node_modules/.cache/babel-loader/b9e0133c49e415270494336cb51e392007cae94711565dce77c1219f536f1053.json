{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julio\\\\Desktop\\\\FinalFEIII\\\\src\\\\Components\\\\Card.jsx\";\nimport React from \"react\";\nimport Doctor from \"../assets/doctor.jpg\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = _ref => {\n  let {\n    name,\n    username,\n    id\n  } = _ref;\n  const agregarAFavorito = () => {\n    let dentist = {\n      \"name\": name,\n      \"username\": username,\n      \"id\": id\n    };\n    let arrayDentist = localStorage.getItem(\"destacados\") != null ? JSON.parse(localStorage.getItem(\"destacados\")) : [];\n    const existe = arrayDentist.some(e => e.id === id);\n    if (!existe) {\n      arrayDentist.push(dentist);\n      localStorage.setItem(\"destacados\", JSON.stringify(arrayDentist));\n    } else {\n      alert(\"El dentista ya se encuentra en favoritos\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"card\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: '/dentist/' + id,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          objectFit: \"fill\"\n        },\n        src: Doctor,\n        alt: \"imagen de doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: '/dentist/' + id,\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: agregarAFavorito,\n      className: \"favButton\",\n      children: \"Agregar a favorito\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","Doctor","Link","jsxDEV","_jsxDEV","Card","_ref","name","username","id","agregarAFavorito","dentist","arrayDentist","localStorage","getItem","JSON","parse","existe","some","e","push","setItem","stringify","alert","className","children","to","style","objectFit","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/julio/Desktop/FinalFEIII/src/Components/Card.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Doctor from \"../assets/doctor.jpg\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Card = ({ name, username, id }) => {\r\n  const agregarAFavorito = () => {\r\n    let dentist = {\r\n      \"name\": name,\r\n      \"username\": username,\r\n      \"id\": id\r\n    }\r\n    let arrayDentist = localStorage.getItem(\"destacados\") != null ? JSON.parse(localStorage.getItem(\"destacados\")) : [];\r\n    const existe = arrayDentist.some((e) => e.id === id)\r\n    if (!existe) {\r\n      arrayDentist.push(dentist);\r\n      localStorage.setItem(\"destacados\", JSON.stringify(arrayDentist));\r\n    }else{\r\n      alert(\"El dentista ya se encuentra en favoritos\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <card className=\"card\">\r\n      <Link to={'/dentist/' + id}><img style={{ objectFit: \"fill\" }} src={Doctor} alt=\"imagen de doctor\" /></Link>\r\n      <Link to={'/dentist/' + id}><h4>{name}</h4></Link>\r\n      <h5>{username}</h5>\r\n      <button onClick={agregarAFavorito} className=\"favButton\">Agregar a favorito</button>\r\n    </card>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,IAAI,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,IAAI,GAAGC,IAAA,IAA4B;EAAA,IAA3B;IAAEC,IAAI;IAAEC,QAAQ;IAAEC;EAAG,CAAC,GAAAH,IAAA;EAClC,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIC,OAAO,GAAG;MACZ,MAAM,EAAEJ,IAAI;MACZ,UAAU,EAAEC,QAAQ;MACpB,IAAI,EAAEC;IACR,CAAC;IACD,IAAIG,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,EAAE;IACnH,MAAMG,MAAM,GAAGL,YAAY,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACV,EAAE,KAAKA,EAAE,CAAC;IACpD,IAAI,CAACQ,MAAM,EAAE;MACXL,YAAY,CAACQ,IAAI,CAACT,OAAO,CAAC;MAC1BE,YAAY,CAACQ,OAAO,CAAC,YAAY,EAAEN,IAAI,CAACO,SAAS,CAACV,YAAY,CAAC,CAAC;IAClE,CAAC,MAAI;MACHW,KAAK,CAAC,0CAA0C,CAAC;IACnD;EACF,CAAC;EAED,oBACEnB,OAAA;IAAMoB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACpBrB,OAAA,CAACF,IAAI;MAACwB,EAAE,EAAE,WAAW,GAAGjB,EAAG;MAAAgB,QAAA,eAACrB,OAAA;QAAKuB,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAO,CAAE;QAACC,GAAG,EAAE5B,MAAO;QAAC6B,GAAG,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAC5G9B,OAAA,CAACF,IAAI;MAACwB,EAAE,EAAE,WAAW,GAAGjB,EAAG;MAAAgB,QAAA,eAACrB,OAAA;QAAAqB,QAAA,EAAKlB;MAAI;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAM;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAClD9B,OAAA;MAAAqB,QAAA,EAAKjB;IAAQ;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACnB9B,OAAA;MAAQ+B,OAAO,EAAEzB,gBAAiB;MAACc,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAkB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC/E;AAEX,CAAC;AAACE,EAAA,GAzBI/B,IAAI;AA2BV,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}